{"mappings":"AAgBA,SAASA,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAjBrB,CACZC,QACE,MAAMC,EAAYC,KAAKC,MACvBC,QAAQC,IAAIJ,GAEZK,aAAY,KACV,MAEMC,EAWZ,SAA2BC,GACzB,MAAMC,EAAQb,EACZc,KAAKC,MAAMH,EAAS,MAAyB,OAEzCI,EAAOhB,EAAIc,KAAKC,MAAMH,EAAS,MAAyB,MACxDK,EAAOjB,EAAIc,KAAKC,MAAMH,EAAS,MAAwB,MAC7D,MAAO,C,MAAEC,E,KAAOG,E,KAAMC,GAjBKC,CAFHZ,KAAKC,MACOF,GAEhCG,QAAQC,IAAIE,KAGX,QAGDP","sources":["src/js/02-timer.js"],"sourcesContent":["const timer = {\n  start() {\n    const startTime = Date.now();\n    console.log(startTime);\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const timeComponents = getTimeComponents(deltaTime);\n      console.log(timeComponents);\n\n      // console.log(new Date(deltaTime).getUTCHours());\n    }, 1000);\n  },\n};\ntimer.start();\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\nfunction getTimeComponents(time) {\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / 1000));\n  return { hours, mins, secs };\n}\n"],"names":["$40d383fb392a7037$var$pad","value","String","padStart","start","startTime","Date","now","console","log","setInterval","timeComponents","time","hours","Math","floor","mins","secs","$40d383fb392a7037$var$getTimeComponents"],"version":3,"file":"02-timer.0e760455.js.map"}