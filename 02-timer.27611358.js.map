{"mappings":"YAgBA,SAASA,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAhBjC,WACE,IAAMC,EAAYC,KAAKC,MACvBC,QAAQC,IAAIJ,GAEZK,aAAY,WACV,IAaqBC,EACnBC,EAGAC,EACAC,EAlBIC,EAAcT,KAAKC,MAEnBS,GAWeL,EAZHI,EAAcV,EAa9BO,EAAQX,EACZgB,KAAKC,MAAMP,EAAS,MAAyB,OAEzCE,EAAOZ,EAAIgB,KAAKC,MAAMP,EAAS,MAAyB,MACxDG,EAAOb,EAAIgB,KAAKC,MAAMP,EAAS,MAAwB,MACtD,CAAEC,QAAOC,OAAMC,SAhBlBN,QAAQC,IAAIO,KAGX,MAGPG,G","sources":["src/js/02-timer.js"],"sourcesContent":["const timer = {\n  start() {\n    const startTime = Date.now();\n    console.log(startTime);\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const timeComponents = getTimeComponents(deltaTime);\n      console.log(timeComponents);\n\n      // console.log(new Date(deltaTime).getUTCHours());\n    }, 1000);\n  },\n};\ntimer.start();\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\nfunction getTimeComponents(time) {\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / 1000));\n  return { hours, mins, secs };\n}\n"],"names":["$84b9dae4df53835d$var$pad","value","String","padStart","startTime","Date","now","console","log","setInterval","time","hours","mins","secs","currentTime","timeComponents","Math","floor","$84b9dae4df53835d$var$timer"],"version":3,"file":"02-timer.27611358.js.map"}