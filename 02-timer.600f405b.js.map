{"mappings":"AAAAA,KAAO,CACLC,SAAUC,SAASC,cAAc,gBACjCC,QAASF,SAASC,cAAc,eAChCE,UAAWH,SAASC,cAAc,UAClCG,SAAUJ,SAASC,cAAc,eACjCI,WAAYL,SAASC,cAAc,gBACnCK,aAAcN,SAASC,cAAc,kBACrCM,cAAeP,SAASC,cAAc,mBAmBxC,SAASO,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAjBrB,CACZC,QACE,MAAMC,EAAYC,KAAKC,MACvBC,QAAQC,IAAIJ,GAEZK,aAAY,KACV,MACMC,EADcL,KAAKC,MACOF,GAC1BO,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,GAWjC,SAA2BC,GACzB,MAAMJ,EAAOZ,EACXiB,KAAKC,MAAMF,EAAS,MAAyB,QAEzCH,EAAQb,EACZiB,KAAKC,MAAMF,EAAS,MAAyB,OAEzCF,EAAOd,EAAIiB,KAAKC,MAAMF,EAAS,MAAyB,MACxDD,EAAOf,EAAIiB,KAAKC,MAAMF,EAAS,MAAwB,MAC7D,MAAO,C,KAAEJ,E,MAAMC,E,KAAOC,E,KAAMC,GApBYI,CAAkBR,GACtDH,QAAQC,IAAI,GAAGG,QAAWC,QAAYC,QAAWC,OAGhD,QAGDX,QAeN,UAAyBQ,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IAC5CzB,KAAKM,SAASwB,YAAc,GAAGR,IAC/BtB,KAAKO,WAAWuB,YAAc,GAAGP,IACjCvB,KAAKQ,aAAasB,YAAc,GAAGN,IACnCxB,KAAKS,cAAcqB,YAAc,GAAGL,IAEtCM","sources":["src/js/02-timer.js"],"sourcesContent":["refs = {\n  startBtn: document.querySelector('[data-start]'),\n  stopBtn: document.querySelector('[data-stop]'),\n  clockFace: document.querySelector('.timer'),\n  dayValue: document.querySelector('[data-days]'),\n  hoursValue: document.querySelector('[data-hours]'),\n  minutesValue: document.querySelector('[data-minutes]'),\n  secundesValue: document.querySelector('[data-seconds]'),\n};\n\nconst timer = {\n  start() {\n    const startTime = Date.now();\n    console.log(startTime);\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const { days, hours, mins, secs } = getTimeComponents(deltaTime);\n      console.log(`${days} :: ${hours} :: ${mins} :: ${secs}`);\n\n      // console.log(new Date(deltaTime).getUTCHours());\n    }, 1000);\n  },\n};\ntimer.start();\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\nfunction getTimeComponents(time) {\n  const days = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60 * 24))\n  );\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / 1000));\n  return { days, hours, mins, secs };\n}\nfunction updateTimerFace({ days, hours, mins, secs }) {\n  refs.dayValue.textContent = `${days}`;\n  refs.hoursValue.textContent = `${hours}`;\n  refs.minutesValue.textContent = `${mins}`;\n  refs.secundesValue.textContent = `${secs}`;\n}\nupdateTimerFace();\n"],"names":["refs","startBtn","document","querySelector","stopBtn","clockFace","dayValue","hoursValue","minutesValue","secundesValue","$40d383fb392a7037$var$pad","value","String","padStart","start","startTime","Date","now","console","log","setInterval","deltaTime","days","hours","mins","secs","time","Math","floor","$40d383fb392a7037$var$getTimeComponents","textContent","$40d383fb392a7037$var$updateTimerFace"],"version":3,"file":"02-timer.600f405b.js.map"}