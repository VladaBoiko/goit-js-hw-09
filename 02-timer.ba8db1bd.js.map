{"mappings":"YAAAA,KAAO,CACLC,SAAUC,SAASC,cAAc,gBACjCC,QAASF,SAASC,cAAc,eAChCE,UAAWH,SAASC,cAAc,UAClCG,SAAUJ,SAASC,cAAc,eACjCI,WAAYL,SAASC,cAAc,gBACnCK,aAAcN,SAASC,cAAc,kBACrCM,cAAeP,SAASC,cAAc,mBAGxC,IA8ByBO,EAAEC,EAAMC,EAAOC,EAAMC,EA9BxCC,EACJ,WACE,IAAMC,EAAYC,KAAKC,MACvBC,QAAQC,IAAIJ,GAEZK,aAAY,WACV,IAEoCC,EAW1C,SAA2BC,GACzB,IAAMZ,EAAOa,EACXC,KAAKC,MAAMH,EAAS,MAAyB,QAEzCX,EAAQY,EACZC,KAAKC,MAAMH,EAAS,MAAyB,OAEzCV,EAAOW,EAAIC,KAAKC,MAAMH,EAAS,MAAyB,MACxDT,EAAOU,EAAIC,KAAKC,MAAMH,EAAS,MAAwB,MAC7D,MAAO,CAAEZ,OAAMC,QAAOC,OAAMC,QApBYa,CAFhBV,KAAKC,MACOF,GACxBL,EAA4BW,EAA5BX,KAAMC,EAAsBU,EAAtBV,MAAOC,EAAeS,EAAfT,KAAMC,EAASQ,EAATR,KAC3BK,QAAQC,IAAI,GAAcQ,OAAXjB,EAAK,QAAkBiB,OAAZhB,EAAM,QAAiBgB,OAAXf,EAAK,QAAWe,OAALd,MAGhD,MAIP,SAASU,EAAIK,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAFnChB,IAe2BJ,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,KAAMC,EAArBJ,EAAqBI,KAC5Cd,KAAKM,SAAS0B,YAAc,GAAQJ,OAALjB,GAC/BX,KAAKO,WAAWyB,YAAc,GAASJ,OAANhB,GACjCZ,KAAKQ,aAAawB,YAAc,GAAQJ,OAALf,GACnCb,KAAKS,cAAcuB,YAAc,GAAQJ,OAALd,G","sources":["src/js/02-timer.js"],"sourcesContent":["refs = {\n  startBtn: document.querySelector('[data-start]'),\n  stopBtn: document.querySelector('[data-stop]'),\n  clockFace: document.querySelector('.timer'),\n  dayValue: document.querySelector('[data-days]'),\n  hoursValue: document.querySelector('[data-hours]'),\n  minutesValue: document.querySelector('[data-minutes]'),\n  secundesValue: document.querySelector('[data-seconds]'),\n};\n\nconst timer = {\n  start() {\n    const startTime = Date.now();\n    console.log(startTime);\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const { days, hours, mins, secs } = getTimeComponents(deltaTime);\n      console.log(`${days} :: ${hours} :: ${mins} :: ${secs}`);\n\n      // console.log(new Date(deltaTime).getUTCHours());\n    }, 1000);\n  },\n};\ntimer.start();\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\nfunction getTimeComponents(time) {\n  const days = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60 * 24))\n  );\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / 1000));\n  return { days, hours, mins, secs };\n}\nfunction updateTimerFace({ days, hours, mins, secs }) {\n  refs.dayValue.textContent = `${days}`;\n  refs.hoursValue.textContent = `${hours}`;\n  refs.minutesValue.textContent = `${mins}`;\n  refs.secundesValue.textContent = `${secs}`;\n}\nupdateTimerFace();\n"],"names":["refs","startBtn","document","querySelector","stopBtn","clockFace","dayValue","hoursValue","minutesValue","secundesValue","param","days","hours","mins","secs","$84b9dae4df53835d$var$timer","startTime","Date","now","console","log","setInterval","ref","time","$84b9dae4df53835d$var$pad","Math","floor","$84b9dae4df53835d$var$getTimeComponents","concat","value","String","padStart","textContent"],"version":3,"file":"02-timer.ba8db1bd.js.map"}